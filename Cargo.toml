[package]
name = "xelf"
version = "0.5.1"
authors = ["Sprite Tong <spritetong@gmail.com>"]
description = "A versatile Rust toolkit for self-use."
repository = "https://github.com/spritetong/xelf.git"
keywords = ["async", "ffi", "database", "serde", "snowflake"]
categories = [
    "asynchronous",
    "database",
    "development-tools::ffi",
    "rust-patterns",
    "network-programming",
]
documentation = "https://docs.rs/xelf"
license = "MIT"
readme = "README.md"
edition = "2021"
rust-version = "1.77"

[lib]
name = "xelf"
path = "src/lib.rs"

[features]
default = ["minimal"]
minimal = ["datetime", "collections", "derive", "io", "once_cell"]
common = [
    "minimal",
    "async",
    "bytes",
    "cfg-if",
    "fs",
    "json",
    "hashmap",
    "hex",
    "log",
    "net",
    "ouroboros",
    "ptr",
    "regex",
    "serde",
    "str",
    "sync",
    "signal",
]
full = ["common", "db", "ffi"]

async = [
    "async-stream",
    "async-trait",
    "esvc",
    "flume",
    "future",
    "futures",
    "futures-util",
    "mio",
    "parking_lot",
    "pin-project",
    "tokio",
]
bytes = ["dep:bytes", "bytestring", "zerocopy"]
collections = ["maplit", "smallvec", "vec"]
datetime = ["chrono", "num"]
db = [
    "async",
    "bytes",
    "collections",
    "datetime",
    "hashmap",
    "json",
    "minimal",
    "ouroboros",
    "regex",
    "rust_decimal",
    "snowflake",
    "sea-orm",
    "serde",
    "str",
    "sync",
    "sqlx",
]
derive = ["derive_more", "smart-default", "strum"]
esvc = ["tokio"]
fs = ["io", "path-absolutize", "tempfile"]
ffi = ["cfg-if", "hashlink", "str", "sync", "zerocopy"]
future = ["futures", "futures-util", "pin-project", "tokio"]
hashmap = ["ahash", "hashlink", "maplit"]
hex = ["dep:hex", "hex-literal"]
io = []
json = ["serde"]
log = ["dep:log", "env_logger", "dotenv"]
net = ["ipnetwork", "socket2", "url", "winapi"]
num = ["num-traits"]
ptr = ["once_cell"]
rustls = ["dep:rustls", "rustls-pemfile", "tokio-rustls"]
rustls-aws-lc-rs = ["rustls/aws-lc-rs", "tokio-rustls/aws-lc-rs"]
rustls-logging = ["rustls/logging", "tokio-rustls/logging"]
rustls-ring = ["rustls/ring"]
serde = [
    "dep:serde",
    "base64",
    "bytestring/serde",
    "chrono/serde",
    "collections",
    "hex",
    "ipnetwork/serde",
    "num",
    "serde_json",
    "serde_repr",
    "serde_with",
]
signal = ["future", "tokio-stream/signal"]
snowflake = ["smart-default"]
str = ["ptr"]
sync = ["arc-swap", "crossbeam", "flume", "num_cpus", "parking_lot", "triomphe"]
tokio = ["dep:tokio", "tokio-stream", "tokio-util"]
vec = []

[dependencies]
ahash = { version = "0.8", optional = true }
maplit = { version = "1", optional = true }
ritelinked = { version = "0.3", optional = true }
hashlink = { version = "0.10", optional = true }
smallvec = { version = "1", optional = true }

bytes = { version = "1", optional = true }
bytestring = { version = "1", optional = true }

chrono = { version = "0.4", optional = true }

derive_more = { version = "2.0", features = [
    "as_ref",
    "debug",
    "deref",
    "deref_mut",
    "display",
    "from",
    "into",
], optional = true }
smart-default = { version = "0.7", optional = true }
strum = { version = "0.27", features = ["derive"], optional = true }

cfg-if = { version = "1", optional = true }
dotenv = { version = "0.15", optional = true }
env_logger = { version = "0.11", optional = true }
log = { version = "0.4", optional = true }
path-absolutize = { version = "3", optional = true }

async-stream = { version = "0.3", optional = true }
async-trait = { version = "0.1", optional = true }
futures = { version = "0.3", optional = true }
futures-util = { version = "0.3", optional = true }
mio = { version = "1", optional = true }
pin-project = { version = "1", optional = true }
tokio = { version = "1", features = ["full"], optional = true }
tokio-rustls = { version = "0.26", default-features = false, features = ["tls12"], optional = true }
tokio-stream = { version = "0.1", features = [
    "fs",
    "io-util",
    "net",
    "sync",
    "time",
], optional = true }
tokio-util = { version = "0.7", features = ["full"], optional = true }

hex = { version = "0.4", optional = true }
hex-literal = { version = "1", optional = true }

ipnetwork = { version = "0.21", optional = true }
socket2 = { version = "0.5", optional = true }
url = { version = "2", optional = true }

num-traits = { version = "0.2", optional = true }

num_cpus = { version = "1", optional = true }
zerocopy = { version = "0.8", features = ["derive"], optional = true }

once_cell = { version = "1", optional = true }
ouroboros = { version = "0.18", optional = true }

regex = { version = "1", optional = true }

base64 = { version = "0.22", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }
serde_repr = { version = "0.1", optional = true }
serde_with = { version = "3", features = ["base64"], optional = true }

tempfile = { version = "3", optional = true }

rustls = { version = "0.23", default-features = false, features = ["std", "tls12"], optional = true }
rustls-pemfile = { version = "2.2", optional = true }

arc-swap = { version = "1", optional = true }
crossbeam = { version = "0.8", optional = true }
flume = { version = "0.11", optional = true }
parking_lot = { version = "0.12", optional = true }
triomphe = { version = "0.1", optional = true }

rust_decimal = { version = "1", optional = true }
sea-orm = { version = "1.1", features = [
    "sqlx-postgres",
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "runtime-tokio",
], optional = true }
sqlx = { version = "0.8", features = [
    "runtime-tokio-rustls",
    "postgres",
    "sqlite",
    "migrate",
], optional = true }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
rustls = { version = "0.23", default-features = false, features = ["aws-lc-rs"], optional = true }

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["mswsock"], optional = true }
